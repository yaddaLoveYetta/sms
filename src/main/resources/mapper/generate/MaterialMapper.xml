<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.eas.hrp.sms.dao.generate.MaterialMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.eas.hrp.sms.model.Material">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="materialId" jdbcType="VARCHAR" property="materialId" />
    <result column="basicUnitMeasurement" jdbcType="VARCHAR" property="basicUnitMeasurement" />
    <result column="orderId" jdbcType="VARCHAR" property="orderId" />
    <result column="unitPrice" jdbcType="DECIMAL" property="unitPrice" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="deliveryTime" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="taxUnitPrice" jdbcType="DECIMAL" property="taxUnitPrice" />
    <result column="actualTaxUnitPrice" jdbcType="DECIMAL" property="actualTaxUnitPrice" />
    <result column="discountPrice" jdbcType="DECIMAL" property="discountPrice" />
    <result column="taxPrice" jdbcType="DECIMAL" property="taxPrice" />
    <result column="functionalCurrencyAmount" jdbcType="DECIMAL" property="functionalCurrencyAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, materialId, basicUnitMeasurement, orderId, unitPrice, numbers, deliveryTime, 
    discount, rate, taxUnitPrice, actualTaxUnitPrice, discountPrice, taxPrice, functionalCurrencyAmount
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.eas.hrp.sms.model.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sms_material_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sms_material_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sms_material_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.eas.hrp.sms.model.MaterialExample">
    delete from t_sms_material_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.eas.hrp.sms.model.Material">
    insert into t_sms_material_information (id, materialId, basicUnitMeasurement, 
      orderId, unitPrice, numbers, 
      deliveryTime, discount, rate, 
      taxUnitPrice, actualTaxUnitPrice, discountPrice, 
      taxPrice, functionalCurrencyAmount)
    values (#{id,jdbcType=INTEGER}, #{materialId,jdbcType=VARCHAR}, #{basicUnitMeasurement,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{unitPrice,jdbcType=DECIMAL}, #{numbers,jdbcType=INTEGER}, 
      #{deliveryTime,jdbcType=TIMESTAMP}, #{discount,jdbcType=DOUBLE}, #{rate,jdbcType=DOUBLE}, 
      #{taxUnitPrice,jdbcType=DECIMAL}, #{actualTaxUnitPrice,jdbcType=DECIMAL}, #{discountPrice,jdbcType=DECIMAL}, 
      #{taxPrice,jdbcType=DECIMAL}, #{functionalCurrencyAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.eas.hrp.sms.model.Material">
    insert into t_sms_material_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="materialId != null">
        materialId,
      </if>
      <if test="basicUnitMeasurement != null">
        basicUnitMeasurement,
      </if>
      <if test="orderId != null">
        orderId,
      </if>
      <if test="unitPrice != null">
        unitPrice,
      </if>
      <if test="numbers != null">
        numbers,
      </if>
      <if test="deliveryTime != null">
        deliveryTime,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="taxUnitPrice != null">
        taxUnitPrice,
      </if>
      <if test="actualTaxUnitPrice != null">
        actualTaxUnitPrice,
      </if>
      <if test="discountPrice != null">
        discountPrice,
      </if>
      <if test="taxPrice != null">
        taxPrice,
      </if>
      <if test="functionalCurrencyAmount != null">
        functionalCurrencyAmount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="basicUnitMeasurement != null">
        #{basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="taxUnitPrice != null">
        #{taxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualTaxUnitPrice != null">
        #{actualTaxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="taxPrice != null">
        #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="functionalCurrencyAmount != null">
        #{functionalCurrencyAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.eas.hrp.sms.model.MaterialExample" resultType="java.lang.Long">
    select count(*) from t_sms_material_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sms_material_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.materialId != null">
        materialId = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.basicUnitMeasurement != null">
        basicUnitMeasurement = #{record.basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        orderId = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null">
        unitPrice = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.numbers != null">
        numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryTime != null">
        deliveryTime = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
      <if test="record.taxUnitPrice != null">
        taxUnitPrice = #{record.taxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.actualTaxUnitPrice != null">
        actualTaxUnitPrice = #{record.actualTaxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.discountPrice != null">
        discountPrice = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.taxPrice != null">
        taxPrice = #{record.taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.functionalCurrencyAmount != null">
        functionalCurrencyAmount = #{record.functionalCurrencyAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sms_material_information
    set id = #{record.id,jdbcType=INTEGER},
      materialId = #{record.materialId,jdbcType=VARCHAR},
      basicUnitMeasurement = #{record.basicUnitMeasurement,jdbcType=VARCHAR},
      orderId = #{record.orderId,jdbcType=VARCHAR},
      unitPrice = #{record.unitPrice,jdbcType=DECIMAL},
      numbers = #{record.numbers,jdbcType=INTEGER},
      deliveryTime = #{record.deliveryTime,jdbcType=TIMESTAMP},
      discount = #{record.discount,jdbcType=DOUBLE},
      rate = #{record.rate,jdbcType=DOUBLE},
      taxUnitPrice = #{record.taxUnitPrice,jdbcType=DECIMAL},
      actualTaxUnitPrice = #{record.actualTaxUnitPrice,jdbcType=DECIMAL},
      discountPrice = #{record.discountPrice,jdbcType=DECIMAL},
      taxPrice = #{record.taxPrice,jdbcType=DECIMAL},
      functionalCurrencyAmount = #{record.functionalCurrencyAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.eas.hrp.sms.model.Material">
    update t_sms_material_information
    <set>
      <if test="materialId != null">
        materialId = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="basicUnitMeasurement != null">
        basicUnitMeasurement = #{basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        orderId = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unitPrice = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        deliveryTime = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="taxUnitPrice != null">
        taxUnitPrice = #{taxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualTaxUnitPrice != null">
        actualTaxUnitPrice = #{actualTaxUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        discountPrice = #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="taxPrice != null">
        taxPrice = #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="functionalCurrencyAmount != null">
        functionalCurrencyAmount = #{functionalCurrencyAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.eas.hrp.sms.model.Material">
    update t_sms_material_information
    set materialId = #{materialId,jdbcType=VARCHAR},
      basicUnitMeasurement = #{basicUnitMeasurement,jdbcType=VARCHAR},
      orderId = #{orderId,jdbcType=VARCHAR},
      unitPrice = #{unitPrice,jdbcType=DECIMAL},
      numbers = #{numbers,jdbcType=INTEGER},
      deliveryTime = #{deliveryTime,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=DOUBLE},
      rate = #{rate,jdbcType=DOUBLE},
      taxUnitPrice = #{taxUnitPrice,jdbcType=DECIMAL},
      actualTaxUnitPrice = #{actualTaxUnitPrice,jdbcType=DECIMAL},
      discountPrice = #{discountPrice,jdbcType=DECIMAL},
      taxPrice = #{taxPrice,jdbcType=DECIMAL},
      functionalCurrencyAmount = #{functionalCurrencyAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>