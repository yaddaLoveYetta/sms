<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdee.eas.hrp.sms.dao.generate.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.kingdee.eas.hrp.sms.model.Invoice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderId" jdbcType="VARCHAR" property="orderId" />
    <result column="orderlineNumbers" jdbcType="INTEGER" property="orderlineNumbers" />
    <result column="materialCode" jdbcType="VARCHAR" property="materialCode" />
    <result column="materialName" jdbcType="VARCHAR" property="materialName" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="batch" jdbcType="VARCHAR" property="batch" />
    <result column="productBatchNumber" jdbcType="VARCHAR" property="productBatchNumber" />
    <result column="individualCode" jdbcType="VARCHAR" property="individualCode" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="basicUnitMeasurement" jdbcType="VARCHAR" property="basicUnitMeasurement" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="productionTime" jdbcType="TIMESTAMP" property="productionTime" />
    <result column="productionManufacturer" jdbcType="VARCHAR" property="productionManufacturer" />
    <result column="productRegistrationNumber" jdbcType="INTEGER" property="productRegistrationNumber" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="effectiveTime" jdbcType="VARCHAR" property="effectiveTime" />
    <result column="invoiceNo" jdbcType="VARCHAR" property="invoiceNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderId, orderlineNumbers, materialCode, materialName, specifications, batch, 
    productBatchNumber, individualCode, price, basicUnitMeasurement, numbers, productionTime, 
    productionManufacturer, productRegistrationNumber, amount, effectiveTime, invoiceNo
  </sql>
  <select id="selectByExample" parameterType="com.kingdee.eas.hrp.sms.model.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sms_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sms_invoice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sms_invoice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kingdee.eas.hrp.sms.model.InvoiceExample">
    delete from t_sms_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kingdee.eas.hrp.sms.model.Invoice">
    insert into t_sms_invoice (id, orderId, orderlineNumbers, 
      materialCode, materialName, specifications, 
      batch, productBatchNumber, individualCode, 
      price, basicUnitMeasurement, numbers, 
      productionTime, productionManufacturer, 
      productRegistrationNumber, amount, effectiveTime, 
      invoiceNo)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{orderlineNumbers,jdbcType=INTEGER}, 
      #{materialCode,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{batch,jdbcType=VARCHAR}, #{productBatchNumber,jdbcType=VARCHAR}, #{individualCode,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{basicUnitMeasurement,jdbcType=VARCHAR}, #{numbers,jdbcType=INTEGER}, 
      #{productionTime,jdbcType=TIMESTAMP}, #{productionManufacturer,jdbcType=VARCHAR}, 
      #{productRegistrationNumber,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{effectiveTime,jdbcType=VARCHAR}, 
      #{invoiceNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kingdee.eas.hrp.sms.model.Invoice">
    insert into t_sms_invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        orderId,
      </if>
      <if test="orderlineNumbers != null">
        orderlineNumbers,
      </if>
      <if test="materialCode != null">
        materialCode,
      </if>
      <if test="materialName != null">
        materialName,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="productBatchNumber != null">
        productBatchNumber,
      </if>
      <if test="individualCode != null">
        individualCode,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="basicUnitMeasurement != null">
        basicUnitMeasurement,
      </if>
      <if test="numbers != null">
        numbers,
      </if>
      <if test="productionTime != null">
        productionTime,
      </if>
      <if test="productionManufacturer != null">
        productionManufacturer,
      </if>
      <if test="productRegistrationNumber != null">
        productRegistrationNumber,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="effectiveTime != null">
        effectiveTime,
      </if>
      <if test="invoiceNo != null">
        invoiceNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderlineNumbers != null">
        #{orderlineNumbers,jdbcType=INTEGER},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=VARCHAR},
      </if>
      <if test="productBatchNumber != null">
        #{productBatchNumber,jdbcType=VARCHAR},
      </if>
      <if test="individualCode != null">
        #{individualCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="basicUnitMeasurement != null">
        #{basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="productionTime != null">
        #{productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productionManufacturer != null">
        #{productionManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="productRegistrationNumber != null">
        #{productRegistrationNumber,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNo != null">
        #{invoiceNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kingdee.eas.hrp.sms.model.InvoiceExample" resultType="java.lang.Long">
    select count(*) from t_sms_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sms_invoice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        orderId = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderlineNumbers != null">
        orderlineNumbers = #{record.orderlineNumbers,jdbcType=INTEGER},
      </if>
      <if test="record.materialCode != null">
        materialCode = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null">
        materialName = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.batch != null">
        batch = #{record.batch,jdbcType=VARCHAR},
      </if>
      <if test="record.productBatchNumber != null">
        productBatchNumber = #{record.productBatchNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.individualCode != null">
        individualCode = #{record.individualCode,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.basicUnitMeasurement != null">
        basicUnitMeasurement = #{record.basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="record.numbers != null">
        numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.productionTime != null">
        productionTime = #{record.productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productionManufacturer != null">
        productionManufacturer = #{record.productionManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.productRegistrationNumber != null">
        productRegistrationNumber = #{record.productRegistrationNumber,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.effectiveTime != null">
        effectiveTime = #{record.effectiveTime,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceNo != null">
        invoiceNo = #{record.invoiceNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sms_invoice
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderId,jdbcType=VARCHAR},
      orderlineNumbers = #{record.orderlineNumbers,jdbcType=INTEGER},
      materialCode = #{record.materialCode,jdbcType=VARCHAR},
      materialName = #{record.materialName,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      batch = #{record.batch,jdbcType=VARCHAR},
      productBatchNumber = #{record.productBatchNumber,jdbcType=VARCHAR},
      individualCode = #{record.individualCode,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      basicUnitMeasurement = #{record.basicUnitMeasurement,jdbcType=VARCHAR},
      numbers = #{record.numbers,jdbcType=INTEGER},
      productionTime = #{record.productionTime,jdbcType=TIMESTAMP},
      productionManufacturer = #{record.productionManufacturer,jdbcType=VARCHAR},
      productRegistrationNumber = #{record.productRegistrationNumber,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      effectiveTime = #{record.effectiveTime,jdbcType=VARCHAR},
      invoiceNo = #{record.invoiceNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingdee.eas.hrp.sms.model.Invoice">
    update t_sms_invoice
    <set>
      <if test="orderId != null">
        orderId = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderlineNumbers != null">
        orderlineNumbers = #{orderlineNumbers,jdbcType=INTEGER},
      </if>
      <if test="materialCode != null">
        materialCode = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        materialName = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=VARCHAR},
      </if>
      <if test="productBatchNumber != null">
        productBatchNumber = #{productBatchNumber,jdbcType=VARCHAR},
      </if>
      <if test="individualCode != null">
        individualCode = #{individualCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="basicUnitMeasurement != null">
        basicUnitMeasurement = #{basicUnitMeasurement,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="productionTime != null">
        productionTime = #{productionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productionManufacturer != null">
        productionManufacturer = #{productionManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="productRegistrationNumber != null">
        productRegistrationNumber = #{productRegistrationNumber,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="effectiveTime != null">
        effectiveTime = #{effectiveTime,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNo != null">
        invoiceNo = #{invoiceNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingdee.eas.hrp.sms.model.Invoice">
    update t_sms_invoice
    set orderId = #{orderId,jdbcType=VARCHAR},
      orderlineNumbers = #{orderlineNumbers,jdbcType=INTEGER},
      materialCode = #{materialCode,jdbcType=VARCHAR},
      materialName = #{materialName,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      batch = #{batch,jdbcType=VARCHAR},
      productBatchNumber = #{productBatchNumber,jdbcType=VARCHAR},
      individualCode = #{individualCode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      basicUnitMeasurement = #{basicUnitMeasurement,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      productionTime = #{productionTime,jdbcType=TIMESTAMP},
      productionManufacturer = #{productionManufacturer,jdbcType=VARCHAR},
      productRegistrationNumber = #{productRegistrationNumber,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      effectiveTime = #{effectiveTime,jdbcType=VARCHAR},
      invoiceNo = #{invoiceNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>